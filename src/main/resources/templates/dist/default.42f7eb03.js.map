{"version":3,"sources":["webpack:///./src/components/EasterEgg/style.less","webpack:///./src/components/adminpage/GameTable/style.less","webpack:///./src/.umi-production/core/history.ts","webpack:///./src/.umi-production/core/plugin.ts","webpack:///./src/.umi-production/plugin-request/request.ts","webpack:///./src/.umi-production/plugin-dva/dva.ts","webpack:///./src/.umi-production/plugin-model/helpers/constant.tsx","webpack:///./src/.umi-production/plugin-model/useModel.tsx","webpack:///./src/.umi-production/plugin-dva/runtime.tsx","webpack:///./src/.umi-production/plugin-initial-state/Provider.tsx","webpack:///./src/.umi-production/plugin-initial-state/runtime.tsx","webpack:///./src/.umi-production/plugin-initial-state/models/initialState.ts","webpack:///./src/.umi-production/plugin-model/helpers/dispatcher.tsx","webpack:///./src/.umi-production/plugin-model/helpers/executor.tsx","webpack:///./src/.umi-production/plugin-model/Provider.tsx","webpack:///./src/.umi-production/plugin-model/runtime.tsx","webpack:///./src/.umi-production/core/pluginRegister.ts","webpack:///./src/.umi-production/core/routes.ts","webpack:///./src/.umi-production/umi.ts","webpack:///./src/api/index.ts","webpack:///./src/components/EasterEgg/index.tsx","webpack:///./src/components/FootButtons/index.tsx","webpack:///./src/components/GameIntro/index.tsx","webpack:///./src/components/RolesList/index.tsx","webpack:///./src/components/adminpage/GameModal/index.tsx","webpack:///./src/components/ClueInfo/index.tsx","webpack:///./src/components/adminpage/DetailModal/GameClues/index.tsx","webpack:///./src/components/RoleInfo/index.tsx","webpack:///./src/components/ScriptInfo/index.tsx","webpack:///./src/components/adminpage/DetailModal/GameScripts/index.tsx","webpack:///./src/components/adminpage/DetailModal/GameRoles/index.tsx","webpack:///./src/components/adminpage/DetailModal/index.tsx","webpack:///./src/components/adminpage/GameTable/index.tsx","webpack:///./src/constants/index.ts","webpack:///./src/components/Logo/index.tsx","webpack:///./src/layouts/components/PageHeader.tsx","webpack:///./src/layouts/components/PageFooter.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/utils/common.ts","webpack:///./src/utils/format.ts","webpack:///./src/utils/request.ts"],"names":["module","exports","options","window","routerBase","basename","history","process","__IS_SERVER","createHashHistory","createHistory","hotReload","plugin","Plugin","validKeys","ErrorShowType","app","_onCreate","runtimeDva","key","type","ApplyPluginsType","initialValue","ModelGamer0","default","ModelModel1","dva","config","g_useSSR","initialState","g_initialProps","use","createLoading","dvaImmer","plugins","forEach","model","namespace","getApp","isBrowser","document","createElement","_DvaContainer","Component","constructor","props","super","then","this","forceUpdate","componentWillUnmount","_models","unmodel","e","console","error","render","router","children","start","UmiContext","React","useModel","updater","dispatcher","useContext","updaterRef","useRef","current","useState","data","state","setState","stateRef","isMount","useEffect","handler","currentState","previousState","isEqual","setTimeout","update","callbacks","add","Set","delete","rootContainer","container","opts","Error","appLoaded","useRuntimeConfig","loading","Provider","refresh","Dispatcher","callback","undefined","hook","onUpdate","updateRef","initialLoad","useMemo","models","Exe","Executor","value","Object","entries","map","pair","val","ns","apply","Plugin_0","path","Plugin_1","Plugin_2","Plugin_3","getRoutes","routes","require","args","getClientRender","hot","isServer","rootElement","defaultTitle","renderClient","clientRender","g_umi","version","getGameInfo","request","method","getRolesList","params","getMyScript","getMyClues","getLocation","EasterEgg","countRef","handleClick","className","style","cursor","color","onClick","FootButtons","size","display","justifyContent","alignItems","Paragraph","GameInfo","description","gameName","width","fontSize","height","borderBottom","ellipsis","rows","expandable","suffix","title","Text","RolesList","rolesList","gutter","item","flex","shape","src","API_PREFIX","roleName","user","id","FormItem","TextArea","layout","labelCol","span","wrapperCol","Dragger","GameModal","visible","setVisible","gameId","form","scripts","setScripts","clues","setClues","handbooks","setHandbooks","res","code","setFieldsValue","resetFields","onCancel","onOk","validateFields","values","formData","FormData","userNum","append","script","clue","handbook","log","message","msg","label","rules","required","name","placeholder","range","max","min","directory","fileList","showUploadList","beforeUpload","file","getFieldValue","webkitRelativePath","split","length","FileDoneOutlined","FileAddFilled","Meta","ClueInfo","images","actions","location","hoverable","cover","Panel","GameClues","cluesList","roundSet","round","Array","from","sort","locationSet","cluesMap","Map","roundMap","get","locationMap","set","header","loc","RoleInfo","avatar","SettingOutlined","EditOutlined","FileUnknownOutlined","ScriptInfo","content","EllipsisOutlined","roleId","scriptsList","setScriptsList","getDetail","useCallback","maskClosable","index","GameRoles","scriptModalVisible","setScriptModalVisible","selectRoleId","setSelectRoleId","GameScripts","TabPane","DetailModal","setRolesList","setCluesList","game","roles","initGame","defaultActiveKey","onChange","tab","GameTable","columns","dataIndex","text","record","maxUser","minUser","status","disabled","onConfirm","handleDelete","danger","handleStart","handleFinish","setSelectId","setDetailModalVisible","dataSource","setDataSource","modalVisible","setModalVisible","detailModalVisible","selectId","fetchList","confirm","padding","icon","SearchOutlined","rowKey","GAME_STATUS","WS_MSG_TYPE","WS_URL","host","replace","IconFont","createFromIconfontCN","scriptUrl","connector","gamer","PageHeader","onMenuClick","event","localForage","UserDropdownMenu","adminUser","setadminUser","find","role","Logo","overlay","connect","PageFooter","useLocation","footer","pathname","GameControl","GamerOperation","Header","Footer","Content","CommonLayoyt","lineHeight","overflow","background","Promise","resolve","reject","random","arr","Math","floor","getRandomFromArray","num","newArr","result","i","push","splice","formatWSData","JSON","parse","buildWsData","stringify","errorHandler","response","extend","prefix","ctx","next"],"mappings":"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","file":"default.42f7eb03.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"egg\":\"egg___2GCqW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table-toolbar\":\"table-toolbar___HvhMo\"};","// @ts-nocheck\nimport { createHashHistory, History } from '/home/culler/code/workspace/larp-front/node_modules/umi/node_modules/@umijs/runtime';\n\nlet options = {\n  \"basename\": \"/\"\n};\nif ((<any>window).routerBase) {\n  options.basename = (<any>window).routerBase;\n}\n\n// remove initial history because of ssr\nlet history: History = process.env.__IS_SERVER ? null : createHashHistory(options);\nexport const createHistory = (hotReload = false) => {\n  if (!hotReload) {\n    history = createHashHistory(options);\n  }\n\n  return history;\n};\n\nexport { history };\n","// @ts-nocheck\nimport { Plugin } from '/home/culler/code/workspace/larp-front/node_modules/umi/node_modules/@umijs/runtime';\n\nconst plugin = new Plugin({\n  validKeys: ['modifyClientRenderOpts','patchRoutes','rootContainer','render','onRouteChange','__mfsu','dva','getInitialState','initialStateConfig','request',],\n});\n\nexport { plugin };\n","// @ts-nocheck\n/**\n * Base on https://github.com/umijs//home/culler/code/workspace/larp-front/node_modules/umi-request\n */\nimport {\n  extend,\n  Context,\n  RequestOptionsInit,\n  OnionMiddleware,\n  RequestOptionsWithoutResponse,\n  RequestMethod,\n  RequestOptionsWithResponse,\n  RequestResponse,\n  RequestInterceptor,\n  ResponseInterceptor,\n} from '/home/culler/code/workspace/larp-front/node_modules/umi-request';\n// @ts-ignore\n\nimport { ApplyPluginsType } from 'umi';\nimport { history, plugin } from '../core/umiExports';\n            \n// decoupling with antd UI library, you can using `alias` modify the ui methods\n// @ts-ignore\nimport { message, notification } from '@umijs/plugin-request/lib/ui';\nimport useUmiRequest, { UseRequestProvider } from '/home/culler/code/workspace/larp-front/node_modules/@ahooksjs/use-request';\nimport {\n  BaseOptions,\n  BasePaginatedOptions,\n  BaseResult,\n  CombineService,\n  LoadMoreFormatReturn,\n  LoadMoreOptions,\n  LoadMoreOptionsWithFormat,\n  LoadMoreParams,\n  LoadMoreResult,\n  OptionsWithFormat,\n  PaginatedFormatReturn,\n  PaginatedOptionsWithFormat,\n  PaginatedParams,\n  PaginatedResult,\n} from '/home/culler/code/workspace/larp-front/node_modules/@ahooksjs/use-request/lib/types';\n\ntype ResultWithData<T = any> = { data?: T; [key: string]: any };\n\nfunction useRequest<\n  R = any,\n  P extends any[] = any,\n  U = any,\n  UU extends U = any,\n>(\n  service: CombineService<R, P>,\n  options: OptionsWithFormat<R, P, U, UU>,\n): BaseResult<U, P>;\nfunction useRequest<R extends ResultWithData = any, P extends any[] = any>(\n  service: CombineService<R, P>,\n  options?: BaseOptions<R['data'], P>,\n): BaseResult<R['data'], P>;\nfunction useRequest<R extends LoadMoreFormatReturn = any, RR = any>(\n  service: CombineService<RR, LoadMoreParams<R>>,\n  options: LoadMoreOptionsWithFormat<R, RR>,\n): LoadMoreResult<R>;\nfunction useRequest<\n  R extends ResultWithData<LoadMoreFormatReturn | any> = any,\n  RR extends R = any,\n>(\n  service: CombineService<R, LoadMoreParams<R['data']>>,\n  options: LoadMoreOptions<RR['data']>,\n): LoadMoreResult<R['data']>;\n\nfunction useRequest<R = any, Item = any, U extends Item = any>(\n  service: CombineService<R, PaginatedParams>,\n  options: PaginatedOptionsWithFormat<R, Item, U>,\n): PaginatedResult<Item>;\nfunction useRequest<Item = any, U extends Item = any>(\n  service: CombineService<\n    ResultWithData<PaginatedFormatReturn<Item>>,\n    PaginatedParams\n  >,\n  options: BasePaginatedOptions<U>,\n): PaginatedResult<Item>;\nfunction useRequest(service: any, options: any = {}) {\n  return useUmiRequest(service, {\n    formatResult: result => result?.data,\n    requestMethod: (requestOptions: any) => {\n      if (typeof requestOptions === 'string') {\n        return request(requestOptions);\n      }\n      if (typeof requestOptions === 'object') {\n        const { url, ...rest } = requestOptions;\n        return request(url, rest);\n      }\n      throw new Error('request options error');\n    },\n    ...options,\n  });\n}\n\nexport interface RequestConfig extends RequestOptionsInit {\n  errorConfig?: {\n    errorPage?: string;\n    adaptor?: (resData: any, ctx: Context) => ErrorInfoStructure;\n  };\n  middlewares?: OnionMiddleware[];\n  requestInterceptors?: RequestInterceptor[];\n  responseInterceptors?: ResponseInterceptor[];\n}\n\nexport enum ErrorShowType {\n  SILENT = 0,\n  WARN_MESSAGE = 1,\n  ERROR_MESSAGE = 2,\n  NOTIFICATION = 4,\n  REDIRECT = 9,\n}\n\ninterface ErrorInfoStructure {\n  success: boolean;\n  data?: any;\n  errorCode?: string;\n  errorMessage?: string;\n  showType?: ErrorShowType;\n  traceId?: string;\n  host?: string;\n  [key: string]: any;\n}\n\ninterface RequestError extends Error {\n  data?: any;\n  info?: ErrorInfoStructure;\n  request?: Context['req'];\n  response?: Context['res'];\n}\n\nconst DEFAULT_ERROR_PAGE = '/exception';\n\nlet requestMethodInstance: RequestMethod;\nconst getRequestMethod = () => {\n  if (requestMethodInstance) {\n    // request method 已经示例化\n    return requestMethodInstance;\n  }\n\n  // runtime 配置可能应为依赖顺序的问题在模块初始化的时候无法获取，所以需要封装一层在异步调用后初始化相关方法\n  // 当用户的 app.ts 中依赖了该文件的情况下就该模块的初始化时间就会被提前，无法获取到运行时配置\n  const requestConfig: RequestConfig = plugin.applyPlugins({\n    key: 'request',\n    type: ApplyPluginsType.modify,\n    initialValue: {},\n  });\n\n  const errorAdaptor =\n    requestConfig.errorConfig?.adaptor || ((resData) => resData);\n\n  requestMethodInstance = extend({\n    errorHandler: (error: RequestError) => {\n      // @ts-ignore\n      if (error?.request?.options?.skipErrorHandler) {\n        throw error;\n      }\n      let errorInfo: ErrorInfoStructure | undefined;\n      if (error.name === 'ResponseError' && error.data && error.request) {\n        const ctx: Context = {\n          req: error.request,\n          res: error.response,\n        };\n        errorInfo = errorAdaptor(error.data, ctx);\n        error.message = errorInfo?.errorMessage || error.message;\n        error.data = error.data;\n        error.info = errorInfo;\n      }\n      errorInfo = error.info;\n\n      if (errorInfo) {\n        const errorMessage = errorInfo?.errorMessage;\n        const errorCode = errorInfo?.errorCode;\n        const errorPage =\n          requestConfig.errorConfig?.errorPage || DEFAULT_ERROR_PAGE;\n\n        switch (errorInfo?.showType) {\n          case ErrorShowType.SILENT:\n            // do nothing\n            break;\n          case ErrorShowType.WARN_MESSAGE:\n            message.warn(errorMessage);\n            break;\n          case ErrorShowType.ERROR_MESSAGE:\n            message.error(errorMessage);\n            break;\n          case ErrorShowType.NOTIFICATION:\n            notification.open({\n              message: errorMessage,\n            });\n            break;\n          case ErrorShowType.REDIRECT:\n            // @ts-ignore\n            history.push({\n              pathname: errorPage,\n              query: { errorCode, errorMessage },\n            });\n            // redirect to error page\n            break;\n          default:\n            message.error(errorMessage);\n            break;\n        }\n      } else {\n        message.error(error.message || 'Request error, please retry.');\n      }\n      throw error;\n    },\n    ...requestConfig,\n  });\n\n  // 中间件统一错误处理\n  // 后端返回格式 { success: boolean, data: any }\n  // 按照项目具体情况修改该部分逻辑\n  requestMethodInstance.use(async (ctx, next) => {\n    await next();\n    const { req, res } = ctx;\n    // @ts-ignore\n    if (req.options?.skipErrorHandler) {\n      return;\n    }\n    const { options } = req;\n    const { getResponse } = options;\n    const resData = getResponse ? res.data : res;\n    const errorInfo = errorAdaptor(resData, ctx);\n    if (errorInfo.success === false) {\n      // 抛出错误到 errorHandler 中处理\n      const error: RequestError = new Error(errorInfo.errorMessage);\n      error.name = 'BizError';\n      error.data = resData;\n      error.info = errorInfo;\n      throw error;\n    }\n  });\n\n  // Add user custom middlewares\n  const customMiddlewares = requestConfig.middlewares || [];\n  customMiddlewares.forEach((mw) => {\n    requestMethodInstance.use(mw);\n  });\n\n  // Add user custom interceptors\n  const requestInterceptors = requestConfig.requestInterceptors || [];\n  const responseInterceptors = requestConfig.responseInterceptors || [];\n  requestInterceptors.map((ri) => {\n    requestMethodInstance.interceptors.request.use(ri);\n  });\n  responseInterceptors.map((ri) => {\n    requestMethodInstance.interceptors.response.use(ri);\n  });\n\n  return requestMethodInstance;\n};\n\ninterface RequestMethodInUmi<R = false> {\n  <T = any>(\n    url: string,\n    options: RequestOptionsWithResponse & { skipErrorHandler?: boolean },\n  ): Promise<RequestResponse<T>>;\n  <T = any>(\n    url: string,\n    options: RequestOptionsWithoutResponse & { skipErrorHandler?: boolean },\n  ): Promise<T>;\n  <T = any>(\n    url: string,\n    options?: RequestOptionsInit & { skipErrorHandler?: boolean },\n  ): R extends true ? Promise<RequestResponse<T>> : Promise<T>;\n}\nconst request: RequestMethodInUmi = (url: any, options: any) => {\n  const requestMethod = getRequestMethod();\n  return requestMethod(url, options);\n};\n\nexport { request, useRequest, UseRequestProvider };\n","// @ts-nocheck\nimport { Component } from 'react';\nimport { ApplyPluginsType } from 'umi';\nimport dva from 'dva';\n// @ts-ignore\nimport createLoading from '/home/culler/code/workspace/larp-front/node_modules/dva-loading/dist/index.esm.js';\nimport { plugin, history } from '../core/umiExports';\nimport dvaImmer, { enableES5, enableAllPlugins } from '/home/culler/code/workspace/larp-front/node_modules/dva-immer/dist/index.js';\n\nlet app:any = null;\n\nexport async function _onCreate(options = {}) {\n  const runtimeDva = plugin.applyPlugins({\n    key: 'dva',\n    type: ApplyPluginsType.modify,\n    initialValue: {},\n  });\n  const ModelGamer0 = (await import('/home/culler/code/workspace/larp-front/src/pages/models/gamer.ts')).default;\r\nconst ModelModel1 = (await import('/home/culler/code/workspace/larp-front/src/pages/DM/model.ts')).default;\n  app = dva({\n    history,\n    \n    ...(runtimeDva.config || {}),\n    // @ts-ignore\n    ...(typeof window !== 'undefined' && window.g_useSSR ? { initialState: window.g_initialProps } : {}),\n    ...(options || {}),\n  });\n  \n  app.use(createLoading());\n  app.use(dvaImmer());\n  (runtimeDva.plugins || []).forEach((plugin:any) => {\n    app.use(plugin);\n  });\n  app.model({ namespace: 'gamer', ...ModelGamer0 });\r\napp.model({ namespace: 'model', ...ModelModel1 });\n  return app;\n}\n\nexport function getApp() {\n  return app;\n}\n\n/**\n * whether browser env\n * \n * @returns boolean\n */\nfunction isBrowser(): boolean {\n  return typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n}\n\nexport class _DvaContainer extends Component {\n  constructor(props: any) {\n    super(props);\n    // run only in client, avoid override server _onCreate()\n    if (isBrowser()) {\n      _onCreate()\n        .then(() => {\n          // force update\n          this.forceUpdate();\n        });\n    }\n  }\n\n  componentWillUnmount() {\n    let app = getApp();\n    app._models.forEach((model:any) => {\n      app.unmodel(model.namespace);\n    });\n    app._models = [];\n    try {\n      // 释放 app，for gc\n      // immer 场景 app 是 read-only 的，这里 try catch 一下\n      app = null;\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    let app = getApp();\n    if (!app) {\n      return null;\n    }\n    app.router(() => this.props.children);\n    return app.start()();\n  }\n}\n","// @ts-nocheck\nimport React from 'react';\n\nexport const UmiContext = React.createContext({});\n","// @ts-nocheck\nimport { useState, useEffect, useContext, useRef } from 'react';\n// @ts-ignore\nimport isEqual from '/home/culler/code/workspace/larp-front/node_modules/@umijs/plugin-model/node_modules/fast-deep-equal/index.js';\n// @ts-ignore\nimport { UmiContext } from './helpers/constant';\nimport { Model, models } from './Provider';\n\nexport type Models<T extends keyof typeof models> = Model<T>[T]\n\nexport function useModel<T extends keyof Model<T>>(model: T): Model<T>[T]\nexport function useModel<T extends keyof Model<T>, U>(model: T, selector: (model: Model<T>[T]) => U): U\n\nexport function useModel<T extends keyof Model<T>, U>(\n  namespace: T,\n  updater?: (model: Model<T>[T]) => U\n) : typeof updater extends undefined ? Model<T>[T] : ReturnType<NonNullable<typeof updater>>{\n\n  type RetState = typeof updater extends undefined ? Model<T>[T] : ReturnType<NonNullable<typeof updater>>\n  const dispatcher = useContext<any>(UmiContext);\n  const updaterRef = useRef(updater);\n  updaterRef.current = updater;\n  const [state, setState] = useState<RetState>(\n    () => updaterRef.current ? updaterRef.current(dispatcher.data![namespace]) : dispatcher.data![namespace]\n  );\n  const stateRef = useRef<any>(state);\n  stateRef.current = state;\n\n  const isMount = useRef(false);\n  useEffect(() => {\n    isMount.current = true;\n    return () => {\n      isMount.current = false;\n    }\n  }, [])\n\n  useEffect(() => {\n    const handler = (e: any) => {\n      if(!isMount.current) {\n        // 如果 handler 执行过程中，组件被卸载了，则强制更新全局 data\n        setTimeout(() => {\n          dispatcher.data![namespace] = e;\n          dispatcher.update(namespace);\n        });\n      } else {\n        if(updater && updaterRef.current){\n          const currentState = updaterRef.current(e);\n          const previousState = stateRef.current\n          if(!isEqual(currentState, previousState)){\n            setState(currentState);\n          }\n        } else {\n          setState(e);\n        }\n      }\n    }\n    try {\n      dispatcher.callbacks![namespace]!.add(handler);\n      dispatcher.update(namespace);\n    } catch (e) {\n      dispatcher.callbacks![namespace] = new Set();\n      dispatcher.callbacks![namespace]!.add(handler);\n      dispatcher.update(namespace);\n    }\n    return () => {\n      dispatcher.callbacks![namespace]!.delete(handler);\n    }\n  }, [namespace]);\n\n  return state;\n};\n","// @ts-nocheck\nimport React from 'react';\nimport { _DvaContainer, getApp, _onCreate } from './dva';\n\nexport function rootContainer(container, opts) {\n  return React.createElement(_DvaContainer, opts, container);\n}\n\n","// @ts-nocheck\n\nimport React, { useRef, useEffect } from \"react\";\nimport { plugin } from \"../core/umiExports\";\nimport { ApplyPluginsType } from 'umi';\nimport { useModel } from \"../plugin-model/useModel\";\nif (typeof useModel !== \"function\") {\n  throw new Error(\n    \"[plugin-initial-state]: useModel is not a function, @umijs/plugin-model is required.\"\n  );\n}\n\ninterface Props {\n  children: React.ReactNode;\n}\nexport default (props: Props) => {\n  const { children } = props;\n  const appLoaded = useRef(false);\n  // 获取用户的配置，暂时只支持 loading\n  const useRuntimeConfig =\n    plugin.applyPlugins({\n      key: \"initialStateConfig\",\n      type: ApplyPluginsType.modify,\n      initialValue: {},\n    }) || {};\n  const { loading = false } = useModel(\"@@initialState\") || {};\n  useEffect(() => {\n    if (!loading) {\n      appLoaded.current = true;\n    }\n  }, [loading]);\n  // initial state loading 时，阻塞渲染\n  if (loading && !appLoaded.current) {\n    return useRuntimeConfig.loading || null;\n  }\n  return children;\n};\n","// @ts-nocheck\nimport React from 'react';\nimport Provider from './Provider';\n\nexport function rootContainer(container: React.ReactNode) {\n  return React.createElement(\n    // 这里的 plugin-initial-state 不能从 constant 里取，里面有 path 依赖\n    // 但 webpack-5 没有 node 补丁（包括 path）\n    Provider,\n    null,\n    container,\n  );\n}\n","// @ts-nocheck\nexport default () => ({ loading: false, refresh: () => {} })","// @ts-nocheck\nexport default class Dispatcher {\n  callbacks = {};\n\n  data = {};\n\n  update = (namespace: string) => {\n    (this.callbacks[namespace] || []).forEach(\n      (callback: (val: any) => void) => {\n        try {\n          const data = this.data[namespace];\n          callback(data);\n        } catch (e) {\n          callback(undefined);\n        }\n      },\n    );\n  };\n}\n","// @ts-nocheck\nimport React, { useEffect, useRef, useMemo } from 'react';\n\ninterface ExecutorProps {\n  hook: () => any;\n  onUpdate: (val: any) => void;\n  namespace: string;\n}\n\nexport default (props: ExecutorProps) => {\n  const { hook, onUpdate, namespace } = props;\n\n  const updateRef = useRef(onUpdate);\n  updateRef.current = onUpdate;\n  const initialLoad = useRef(false);\n\n  let data: any;\n  try {\n    data = hook();\n    if (\n      process.env.NODE_ENV === 'development' &&\n      typeof document !== 'undefined'\n    ) {\n      try {\n        let count = Object.keys(\n          ((window as any)._umi_useModel_dev_tool_log || {})[namespace] || {},\n        ).length;\n        (window as any)._umi_useModel_dev_tool = Object.assign(\n          (window as any)._umi_useModel_dev_tool || {},\n          {\n            [namespace]: data,\n          },\n        );\n        (window as any)._umi_useModel_dev_tool_log = Object.assign(\n          (window as any)._umi_useModel_dev_tool_log || {},\n          {\n            [namespace]: Object.assign(\n              ((window as any)._umi_useModel_dev_tool_log || {})[namespace] ||\n                {},\n              {\n                [count]: data,\n              },\n            ),\n          },\n        );\n        window.dispatchEvent(\n          new CustomEvent('_umi_useModel_update', {\n            detail: {\n              namespace,\n              time: Date.now(),\n              data,\n              index: count,\n            },\n          }),\n        );\n      } catch (e) {\n        // dev tool 记录失败、可能是低版本浏览器，忽略\n      }\n    }\n  } catch (e) {\n    console.error(\n      `plugin-model: Invoking '${namespace || 'unknown'}' model failed:`,\n      e,\n    );\n  }\n\n  // 首次执行时立刻返回初始值\n  useMemo(() => {\n    updateRef.current(data);\n    initialLoad.current = false;\n  }, []);\n\n  // React 16.13 后 update 函数用 useEffect 包裹\n  useEffect(() => {\n    if (initialLoad.current) {\n      updateRef.current(data);\n    } else {\n      initialLoad.current = true;\n    }\n  });\n\n  return <></>;\n};\n","// @ts-nocheck\nimport React from 'react';\nimport initialState from '/home/culler/code/workspace/larp-front/src/.umi-production/plugin-initial-state/models/initialState';\n\n// @ts-ignore\nimport Dispatcher from './helpers/dispatcher';\n// @ts-ignore\nimport Executor from './helpers/executor';\n// @ts-ignore\nimport { UmiContext } from './helpers/constant';\n\nexport const models = { '@@initialState': initialState,  };\n\nexport type Model<T extends keyof typeof models> = {\n  [key in keyof typeof models]: ReturnType<typeof models[T]>;\n};\n\nexport type Models<T extends keyof typeof models> = Model<T>[T]\n\nconst dispatcher = new Dispatcher!();\nconst Exe = Executor!;\n\nexport default ({ children }: { children: React.ReactNode }) => {\n\n  return (\n    <UmiContext.Provider value={dispatcher}>\n      {\n        Object.entries(models).map(pair => (\n          <Exe key={pair[0]} namespace={pair[0]} hook={pair[1] as any} onUpdate={(val: any) => {\n            const [ns] = pair as [keyof typeof models, any];\n            dispatcher.data[ns] = val;\n            dispatcher.update(ns);\n          }} />\n        ))\n      }\n      {children}\n    </UmiContext.Provider>\n  )\n}\n","// @ts-nocheck\n/* eslint-disable import/no-dynamic-require */\nimport React from 'react';\nimport Provider from './Provider';\n\nexport function rootContainer(container: React.ReactNode) {\n  return React.createElement(\n    Provider,\n    null,\n    container,\n  );\n}\n","// @ts-nocheck\nimport { plugin } from './plugin';\nimport * as Plugin_0 from '/home/culler/code/workspace/larp-front/src/app.tsx';\nimport * as Plugin_1 from '/home/culler/code/workspace/larp-front/src/.umi-production/plugin-dva/runtime.tsx';\nimport * as Plugin_2 from '../plugin-initial-state/runtime';\nimport * as Plugin_3 from '../plugin-model/runtime';\n\n  plugin.register({\n    apply: Plugin_0,\n    path: '/home/culler/code/workspace/larp-front/src/app.tsx',\n  });\n  plugin.register({\n    apply: Plugin_1,\n    path: '/home/culler/code/workspace/larp-front/src/.umi-production/plugin-dva/runtime.tsx',\n  });\n  plugin.register({\n    apply: Plugin_2,\n    path: '../plugin-initial-state/runtime',\n  });\n  plugin.register({\n    apply: Plugin_3,\n    path: '../plugin-model/runtime',\n  });\n\nexport const __mfsu = 1;\n","// @ts-nocheck\nimport React from 'react';\nimport { ApplyPluginsType } from '/home/culler/code/workspace/larp-front/node_modules/umi/node_modules/@umijs/runtime';\nimport * as umiExports from './umiExports';\nimport { plugin } from './plugin';\n\nexport function getRoutes() {\n  const routes = [\n  {\n    \"path\": \"/login\",\n    \"component\": require('@/pages/Login').default,\n    \"exact\": true\n  },\n  {\n    \"path\": \"/\",\n    \"component\": require('@/pages/index').default,\n    \"redirect\": \"/login\",\n    \"exact\": true\n  },\n  {\n    \"path\": \"/\",\n    \"component\": require('@/layouts').default,\n    \"routes\": [\n      {\n        \"path\": \"/gamer\",\n        \"component\": require('@/pages/Gamer').default,\n        \"exact\": true\n      },\n      {\n        \"path\": \"/admin\",\n        \"component\": require('@/pages/Admin').default,\n        \"exact\": true\n      },\n      {\n        \"path\": \"/dm\",\n        \"component\": require('@/pages/DM').default,\n        \"exact\": true\n      }\n    ]\n  }\n];\n\n  // allow user to extend routes\n  plugin.applyPlugins({\n    key: 'patchRoutes',\n    type: ApplyPluginsType.event,\n    args: { routes },\n  });\n\n  return routes;\n}\n","// @ts-nocheck\nimport './core/polyfill';\n\nimport { plugin } from './core/plugin';\nimport './core/pluginRegister';\nimport { createHistory } from './core/history';\nimport { ApplyPluginsType } from '/home/culler/code/workspace/larp-front/node_modules/umi/node_modules/@umijs/runtime';\nimport { renderClient } from '/home/culler/code/workspace/larp-front/node_modules/umi/node_modules/@umijs/renderer-react';\nimport { getRoutes } from './core/routes';\n\n\nimport '../global.less';\n\nconst getClientRender = (args: { hot?: boolean; routes?: any[] } = {}) => plugin.applyPlugins({\n  key: 'render',\n  type: ApplyPluginsType.compose,\n  initialValue: () => {\n    const opts = plugin.applyPlugins({\n      key: 'modifyClientRenderOpts',\n      type: ApplyPluginsType.modify,\n      initialValue: {\n        routes: args.routes || getRoutes(),\n        plugin,\n        history: createHistory(args.hot),\n        isServer: process.env.__IS_SERVER,\n        rootElement: 'root',\n        defaultTitle: ``,\n      },\n    });\n    return renderClient(opts);\n  },\n  args,\n});\n\nconst clientRender = getClientRender();\nexport default clientRender();\n\n\n    window.g_umi = {\n      version: '3.5.13',\n    };\n  \n\n// hot module replacement\n// @ts-ignore\nif (module.hot) {\n  // @ts-ignore\n  module.hot.accept('./core/routes', () => {\n    const ret = require('./core/routes');\n    if (ret.then) {\n      ret.then(({ getRoutes }) => {\n        getClientRender({ hot: true, routes: getRoutes() })();\n      });\n    } else {\n      getClientRender({ hot: true, routes: ret.getRoutes() })();\n    }\n  });\n}\n","import request from '@/utils/request';\n\nexport const getGameInfo = async () => {\n  return await request('/game/getCurrentGame', {\n    method: 'GET',\n  });\n};\n\nexport const getRolesList = async (params: any) => {\n  return await request('/roles/list', {\n    method: 'GET',\n    params,\n  });\n};\n\nexport const getMyScript = async (params: any) => {\n  return await request('/scripts/getScripts', {\n    method: 'GET',\n    params,\n  });\n};\n\nexport const getMyClues = async (params: any) => {\n  return await request('/clues/getMyClues', {\n    method: 'GET',\n    params,\n  });\n};\n\n\nexport const getLocation = async (params: any) => {\n  return await request('/clues/getLocation', {\n    method: 'GET',\n    params,\n  });\n};\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport { BugOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport style from './style.less';\ntype TEasterEgg = {};\nconst EasterEgg: FC<TEasterEgg> = () => {\n  const countRef = useRef(0);\n  const handleClick = () => {\n    if (countRef.current === 0) {\n      message.success('恭喜你触发了一个小彩蛋,多点几次有惊喜(不要告诉其他人~)');\n      countRef.current = countRef.current + 1;\n      return;\n    }\n    countRef.current = countRef.current + 1;\n    if (countRef.current === 10) {\n      message.success('加油，再点几次');\n      countRef.current = 1;\n    }\n  };\n  return (\n    <div className={style.egg}>\n      <BugOutlined\n        style={{ cursor: 'pointer', color: 'rgb(0, 32, 64)' }}\n        onClick={handleClick}\n      />\n    </div>\n  );\n};\n\nexport default EasterEgg;\n","import React, { FC, useState, useEffect, Children } from 'react';\nimport { Button } from 'antd';\nimport { SizeType } from 'antd/es/config-provider/SizeContext';\ntype TFootButtons = {\n  size?: SizeType;\n};\nconst FootButtons: FC<TFootButtons> = ({ size, children }) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Button.Group size={size}>{children}</Button.Group>\n    </div>\n  );\n};\n\nexport default FootButtons;\n","import React, { FC, useState, useEffect } from 'react';\nimport { Typography, Row, Col } from 'antd';\nconst { Paragraph } = Typography;\ntype TGameIntro = {\n  description: string;\n  gameName: string;\n};\nconst GameInfo: FC<TGameIntro> = ({ description, gameName }) => {\n  return (\n    <>\n      <Row>\n        <h3\n          style={{\n            width: '300px',\n            fontSize: 22,\n            height: 40,\n            borderBottom: '4px solid #000',\n          }}\n        >\n          {gameName}\n        </h3>\n      </Row>\n      <Row>\n        <Paragraph\n          ellipsis={{\n            rows: 3,\n            expandable: true,\n            suffix: '--剧本介绍',\n          }}\n          title={`剧本介绍`}\n        >\n          {description}\n        </Paragraph>\n      </Row>\n    </>\n  );\n};\n\nexport default GameInfo;\n","import React, { FC, useState, useEffect } from 'react';\nimport { TRoleInfo } from '@/types';\nimport { Avatar, Image, Row, Col, Typography, Card } from 'antd';\nimport { API_PREFIX } from '@/constants';\nimport './style.less';\nconst { Meta } = Card;\nconst { Text } = Typography;\n\ntype TRolesList = {\n  rolesList: TRoleInfo[];\n  size?: 'large' | 'small';\n  type?: 'card' | 'avatar';\n};\nconst RolesList: FC<TRolesList> = ({\n  rolesList,\n  size = 'large',\n  type = 'card',\n}) => {\n  return (\n    <Row gutter={8}>\n      {rolesList.map((item) => {\n        return (\n          <Col flex={1} key={item.id}>\n            <Avatar\n              shape=\"circle\"\n              size={60}\n              src={<Image src={`${API_PREFIX}/images/1.jpg`} />}\n            />\n            <Row>\n              <Text>{`${item?.roleName}(${item?.user})`}</Text>\n            </Row>\n            <Row>\n              <Text type=\"secondary\">{item?.description}</Text>\n            </Row>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\nexport default RolesList;\n","import React, { FC, useEffect, useState } from 'react';\nimport { Modal, Form, Input, Upload, message, Slider } from 'antd';\nimport { FileAddFilled, FileDoneOutlined } from '@ant-design/icons';\nimport { request } from '@/utils';\n\ntype TGameModal = {\n  visible: boolean;\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  onUpdate?: () => void;\n  gameId?: number;\n};\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\nconst { Dragger } = Upload;\n\nconst GameModal: FC<TGameModal> = ({\n  visible,\n  setVisible,\n  onUpdate,\n  gameId,\n}) => {\n  const [form] = Form.useForm();\n  const [scripts, setScripts] = useState<any[]>([]);\n  const [clues, setClues] = useState<any[]>([]);\n  const [handbooks, setHandbooks] = useState<any[]>([])\n  useEffect(() => {\n    (async () => {\n      if (visible) {\n        if (gameId) {\n          const res = await request(`/game/detail?gameId=${gameId}`);\n          if (res.code === 200) {\n            const data = {\n              ...res.data,\n            };\n            form.setFieldsValue(data);\n          }\n        } else {\n          form.resetFields();\n        }\n      }\n    })();\n  }, [visible, gameId]);\n  const title = gameId ? '编辑' : '新建';\n\n  const onCancel = () => {\n    form.resetFields();\n    setVisible(false);\n  };\n\n  const onOk = async () => {\n    try {\n      let values = await form.validateFields();\n      const formData = new FormData();\n      if (values.userNum) {\n        formData.append('minUser', values.userNum[0]);\n        formData.append('maxUser', values.userNum[1]);\n        delete values.userNum;\n      }\n      Object.entries(values).forEach(([key, value]) => {\n        if (value !== undefined) {\n          formData.append(key, value as any);\n        }\n      });\n      for (const script of scripts) {\n        formData.append('scripts', script);\n      }\n      for (const clue of clues) {\n        formData.append('clues', clue);\n      }\n      for (const handbook of handbooks) {\n        formData.append('handbook', handbook);\n      }\n      const res = await request('/game/create', {\n        method: 'POST',\n        data: formData,\n      });\n      console.log(res);\n      if (res.code === 200) {\n        message.success('新建成功');\n        setVisible(false);\n        form.resetFields();\n        onUpdate?.();\n      } else {\n        message.warn(res.msg);\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      width={500}\n      onCancel={onCancel}\n      onOk={onOk}\n      title={title}\n    >\n      <Form form={form} size=\"small\" {...layout}>\n        <FormItem\n          label=\"剧本杀名称\"\n          rules={[\n            {\n              required: true,\n              message: '请填写剧本杀名称',\n            },\n          ]}\n          name=\"gameName\"\n        >\n          <Input placeholder=\"请填写剧本杀名称\" />\n        </FormItem>\n        <FormItem label=\"人数\" name=\"userNum\">\n          <Slider range max={10} min={2} />\n        </FormItem>\n        <FormItem\n          label=\"每轮最多线索数\"\n          name=\"maxClues\"\n          rules={[\n            {\n              min: 1,\n            },\n          ]}\n        >\n          <Input type=\"number\" />\n        </FormItem>\n        <FormItem\n          label=\"总章节\"\n          name=\"roundTotal\"\n          rules={[\n            {\n              min: 1,\n            },\n          ]}\n        >\n          <Input type=\"number\" />\n        </FormItem>\n        <FormItem label=\"描述\" name=\"description\" initialValue=\"\">\n          <TextArea />\n        </FormItem>\n        <FormItem label=\"导入剧本\">\n          <Dragger\n            directory\n            fileList={scripts}\n            showUploadList={false}\n            beforeUpload={(file, fileList) => {\n              try {\n                if (!form.getFieldValue('gameName')) {\n                  let gameName = file?.webkitRelativePath ?? '';\n                  gameName = gameName.split('/')[0];\n                  form.setFieldsValue({ gameName });\n                }\n              } catch (error) {}\n              setScripts(fileList);\n            }}\n          >\n            {scripts.length > 0 ? (\n              <FileDoneOutlined\n                style={{ color: '#447CE6', fontSize: '24px' }}\n              />\n            ) : (\n              <FileAddFilled style={{ color: '#447CE6', fontSize: '24px' }} />\n            )}\n          </Dragger>\n        </FormItem>\n        <FormItem label=\"导入线索\">\n          <Dragger\n            directory\n            fileList={clues}\n            showUploadList={false}\n            beforeUpload={(file, fileList) => {\n              setClues(fileList);\n            }}\n          >\n            {clues.length > 0 ? (\n              <FileDoneOutlined\n                style={{ color: '#447CE6', fontSize: '24px' }}\n              />\n            ) : (\n              <FileAddFilled style={{ color: '#447CE6', fontSize: '24px' }} />\n            )}\n          </Dragger>\n        </FormItem>\n\n        <FormItem label=\"导入组织者手册\">\n          <Dragger\n            directory\n            fileList={handbooks}\n            showUploadList={false}\n            beforeUpload={(file, fileList) => {\n              setHandbooks(fileList);\n            }}\n          >\n            {handbooks.length > 0 ? (\n              <FileDoneOutlined\n                style={{ color: '#447CE6', fontSize: '24px' }}\n              />\n            ) : (\n              <FileAddFilled style={{ color: '#447CE6', fontSize: '24px' }} />\n            )}\n          </Dragger>\n        </FormItem>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default GameModal;\n","import React, { FC, useState, useEffect } from 'react';\nimport { Card, Image } from 'antd';\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nconst { Meta } = Card;\nimport { TClueInfo } from '@/types';\nimport { API_PREFIX } from '@/constants';\ninterface IClueInfo extends TClueInfo {\n  actions?: React.ReactNode[] | undefined;\n}\n\nconst ClueInfo: FC<IClueInfo> = ({\n  images,\n  code,\n  description,\n  actions,\n  location,\n}) => {\n  return (\n    <Card hoverable cover={<Image src={`${API_PREFIX}/${images}`} />} actions={actions}>\n      <Meta title={code} description={description} />\n    </Card>\n  );\n};\nexport default ClueInfo;\n","import React, { FC, useState, useEffect, useMemo } from 'react';\n\nimport {\n  Modal,\n  Form,\n  Input,\n  Upload,\n  message,\n  Slider,\n  Tabs,\n  Image,\n  Collapse,\n  Row,\n  Col,\n} from 'antd';\nimport { TClueInfo } from '@/types';\nimport ClueInfo from '@/components/ClueInfo';\nimport { request } from '@/utils';\n\ntype TGameClues = {\n  cluesList: TClueInfo[];\n  gameId: number;\n};\n\ntype TClueList = (readonly [number, Map<string, TClueInfo[]>])[];\n\nconst { Panel } = Collapse;\n\nconst GameClues: FC<TGameClues> = ({ cluesList }) => {\n  const roundList = useMemo(() => {\n    const roundSet = new Set<number>();\n    cluesList.map((item) => {\n      item.round && roundSet.add(item.round);\n    });\n    return Array.from(roundSet).sort();\n  }, [cluesList]);\n\n  const locationList = useMemo(() => {\n    const locationSet = new Set<string>();\n    cluesList.map((item) => {\n      item.location && locationSet.add(item.location);\n    });\n    return Array.from(locationSet);\n  }, [cluesList]);\n\n  const clues: TClueList = useMemo(() => {\n    const cluesMap = new Map<number, Map<string, TClueInfo[]>>();\n    cluesList.map((item) => {\n      let round = item.round || -1;\n      let location = item.location || '其他';\n      let roundMap = cluesMap.get(round);\n      if (roundMap) {\n        let locationMap = roundMap.get(location);\n        if (locationMap) {\n          roundMap.set(location, [...locationMap, item]);\n        } else {\n          roundMap.set(location, [item]);\n        }\n      } else {\n        cluesMap.set(round, new Map([[location, [item]]]));\n      }\n    });\n    return Array.from(cluesMap.entries());\n  }, [cluesList]);\n\n  return (\n    <Collapse>\n      {clues.map(([round, roundMap]) => (\n        <Panel key={round} header={`第${round}轮线索`}>\n          {Array.from(roundMap.entries()).map(([loc, cluesList]) => (\n            <div key={loc}>\n              <div>{loc}</div>\n              <Row gutter={4}>\n                {cluesList.map((item) => (\n                  <Col key={item.id} span={6}>\n                    <ClueInfo {...item} />\n                  </Col>\n                ))}\n              </Row>\n            </div>\n          ))}\n        </Panel>\n      ))}\n    </Collapse>\n  );\n};\n\nexport default GameClues;\n","import React, { FC, useState, useEffect } from 'react';\nimport { Card, Image } from 'antd';\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n  FileUnknownOutlined,\n} from '@ant-design/icons';\nimport { API_PREFIX } from '@/constants';\nconst { Meta } = Card;\nimport { TRoleInfo } from '@/types';\n\ninterface IRoleInfo extends TRoleInfo {\n  handleClick?: () => void;\n}\n\nconst RoleInfo: FC<IRoleInfo> = ({\n  avatar,\n  roleName,\n  description,\n  handleClick,\n}) => {\n  return (\n    <Card\n      hoverable\n      cover={<Image src={(avatar ||= `${API_PREFIX}/images/封面.jpg`)} />}\n      actions={[\n        <SettingOutlined key=\"setting\" />,\n        <EditOutlined key=\"edit\" />,\n        <FileUnknownOutlined\n          key=\"scripts\"\n          onClick={() => {\n            console.log(1);\n            handleClick?.();\n          }}\n        />,\n        // <EllipsisOutlined key=\"ellipsis\" />,\n      ]}\n    >\n      <Meta title={roleName} description={description} />\n    </Card>\n  );\n};\nexport default RoleInfo;\n","import React, { FC, useState, useEffect } from 'react';\nimport { Card, Image } from 'antd';\nimport {\n  EditOutlined,\n  EllipsisOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\nimport { API_PREFIX } from '@/constants';\nconst { Meta } = Card;\nimport { TScriptInfo } from '@/types';\n\nconst ScriptInfo: FC<TScriptInfo> = ({ content }) => {\n  return (\n    <Card\n      hoverable\n      cover={<Image src={`${API_PREFIX}/${content}`} />}\n      actions={[\n        <SettingOutlined key=\"setting\" />,\n        <EditOutlined key=\"edit\" />,\n        <EllipsisOutlined key=\"ellipsis\" />,\n      ]}\n    >\n      {/* <Meta title={roleName} description={description} /> */}\n    </Card>\n  );\n};\nexport default ScriptInfo;\n","import React, { FC, useState, useEffect, useCallback } from 'react';\n\nimport {\n  Modal,\n  Form,\n  Input,\n  Upload,\n  message,\n  Slider,\n  Tabs,\n  Row,\n  Col,\n  Image,\n} from 'antd';\nimport { TScriptInfo } from '@/types';\nimport ScriptInfo from '@/components/ScriptInfo';\nimport { request } from '@/utils';\n\ntype TGameClues = {\n  visible: boolean;\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  onUpdate?: () => void;\n  roleId: number;\n};\n\nconst GameClues: FC<TGameClues> = ({\n  visible,\n  setVisible,\n  onUpdate,\n  roleId,\n}) => {\n  const [scriptsList, setScriptsList] = useState<TScriptInfo[]>([]);\n  const getDetail = useCallback(async () => {\n    const res = await request(`/scripts/getAllScripts/${roleId}`);\n    if (res.code === 200) {\n      setScriptsList(res.data);\n    }\n  }, [roleId]);\n\n  useEffect(() => {\n    if (visible && roleId) {\n      getDetail();\n    }\n  }, [visible, roleId]);\n\n  const onCancel = () => {\n    setVisible(false);\n  };\n  const onOk = () => {};\n  const title = '角色剧本';\n  return (\n    <Modal\n      width={1000}\n      visible={visible}\n      onCancel={onCancel}\n      onOk={onOk}\n      title={title}\n      maskClosable={false}\n    >\n      <Row gutter={4}>\n        <Image.PreviewGroup>\n          {scriptsList.map((item, index) => {\n            return (\n              <Col span={6} key={index}>\n                <ScriptInfo {...item} />\n              </Col>\n            );\n          })}\n        </Image.PreviewGroup>\n      </Row>\n    </Modal>\n  );\n};\n\nexport default GameClues;\n","import React, { FC, useState, useEffect, useCallback } from 'react';\nimport { Alert, Button, Image, Card, Row, Col, message } from 'antd';\nimport type { TRoleInfo } from '@/types';\n\nimport RoleInfo from '@/components/RoleInfo';\nimport GameScripts from '../GameScripts';\n\ntype TGameRoles = {\n  rolesList: TRoleInfo[];\n  gameId: number;\n};\nconst GameRoles: FC<TGameRoles> = ({ rolesList, gameId }) => {\n  const [scriptModalVisible, setScriptModalVisible] = useState(false);\n  const [selectRoleId, setSelectRoleId] = useState<number>(0);\n\n  return (\n    <div>\n      <Image.PreviewGroup>\n        <Row gutter={4}>\n          {rolesList.map((item, index) => {\n            return (\n              <Col span={6} key={index}>\n                <RoleInfo\n                  {...item}\n                  handleClick={() => {\n                    setSelectRoleId(item.id);\n                    setScriptModalVisible(true);\n                  }}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Image.PreviewGroup>\n      <GameScripts\n        visible={scriptModalVisible}\n        setVisible={setScriptModalVisible}\n        roleId={selectRoleId}\n      />\n    </div>\n  );\n};\n\nexport default GameRoles;\n","import React, { FC, useEffect, useState, useCallback } from 'react';\nimport {\n  Modal,\n  Alert,\n  Button,\n  Form,\n  Input,\n  Upload,\n  message,\n  Slider,\n  Tabs,\n} from 'antd';\nimport GameClues from './GameClues';\nimport GameRoles from './GameRoles';\nimport { request } from '@/utils';\nimport type { TRoleInfo, TClueInfo } from '@/types';\n\ntype TDetailModal = {\n  visible: boolean;\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  onUpdate?: () => void;\n  gameId: number;\n};\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 18 },\n};\nconst { TabPane } = Tabs;\nconst { Dragger } = Upload;\nconst DetailModal: FC<TDetailModal> = ({\n  visible,\n  setVisible,\n  onUpdate,\n  gameId,\n}) => {\n  const title = '剧本与线索';\n  const onCancel = () => {\n    setVisible(false);\n  };\n  const [rolesList, setRolesList] = useState<TRoleInfo[]>([]);\n  const [cluesList, setCluesList] = useState<TClueInfo[]>([])\n  const getDetail = useCallback(async () => {\n    const res = await request(`/game/detail/${gameId}`, {\n      method: 'POST',\n\n    });\n    if (res.code === 200) {\n      const { clues = [], game = {}, roles = [] } = res.data || {};\n      setRolesList(roles);\n      setCluesList(clues)\n    }\n  }, [gameId]);\n\n  useEffect(() => {\n    if (visible && gameId) {\n      getDetail();\n    }\n  }, [visible, gameId]);\n\n  const onOk = () => {};\n\n  const initGame = async () => {\n    const res = await request(`/game/initGame/${gameId}`, {\n      method: 'POST',\n    });\n    if (res.code === 200) {\n      message.success('初始化成功');\n      getDetail();\n    } else {\n      message.warn(res.msg);\n    }\n  };\n\n  return (\n    <Modal\n      width={1000}\n      visible={visible}\n      onCancel={onCancel}\n      onOk={onOk}\n      title={title}\n      maskClosable={false}\n    >\n      {rolesList.length === 0 && (\n        <div>\n          <Alert\n            message=\"当前没有角色,你可以从导入中初始化生成\"\n            type=\"warning\"\n          />\n          <Button onClick={initGame}>初始化角色和线索</Button>\n        </div>\n      )}\n      <Tabs defaultActiveKey=\"1\" onChange={() => {}}>\n        <TabPane tab=\"角色&剧本\" key=\"1\">\n          <GameRoles rolesList={rolesList} gameId={gameId} />\n        </TabPane>\n        <TabPane tab=\"线索\" key=\"2\">\n          <GameClues gameId={gameId} cluesList={cluesList} />\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default DetailModal;\n","import React, { FC, useEffect, useState } from 'react';\nimport GameModal from '../GameModal';\nimport DetailModal from '../DetailModal';\nimport { Table, Button, Space, Popconfirm, message } from 'antd';\nimport { ColumnType } from 'antd/es/table';\nimport { request, confirm } from '@/utils';\nimport { history } from 'umi';\nimport { TGameInfo } from '@/types';\nimport {\n  EditOutlined,\n  FileDoneOutlined,\n  CopyOutlined,\n  ExclamationCircleOutlined,\n  EllipsisOutlined,\n  PlusOutlined,\n  SearchOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport style from './style.less';\ninterface IColumn extends TGameInfo {}\n\nconst GameTable: FC<any> = (props) => {\n  const columns: ColumnType<IColumn>[] = [\n    {\n      title: 'id',\n      dataIndex: 'id',\n      key: 'id',\n      width: 100,\n    },\n    {\n      title: '游戏名称',\n      dataIndex: 'gameName',\n      key: 'gameName',\n    },\n    {\n      title: '人数',\n      dataIndex: 'userNum',\n      key: 'userNum',\n      render: (text, record) => {\n        if (record.maxUser && record.minUser) {\n          return `${record.minUser}~${record.maxUser}人`;\n        }\n        return null;\n      },\n    },\n    {\n      title: '主持人',\n      dataIndex: 'dm',\n      key: 'dm',\n      width: 100,\n    },\n    {\n      title: '当前状态',\n      dataIndex: 'status',\n      key: 'status',\n      render: (text, record) => {\n        switch (record.status) {\n          case 0:\n            return '未开始';\n          case 1:\n            return '当前';\n          case -1:\n            return '已完成';\n          default:\n            return '';\n        }\n      },\n    },\n    {\n      title: '操作',\n      dataIndex: 'handle',\n      key: 'handle',\n      width: 300,\n      render: (text, record) => {\n        return (\n          <Space>\n            <Popconfirm\n              title=\"确定要删除吗\"\n              disabled={record.status !== 0}\n              onConfirm={() => handleDelete(record.id)}\n            >\n              <Button\n                size=\"small\"\n                danger\n                key=\"delete\"\n                disabled={record.status !== 0}\n              >\n                删除\n              </Button>\n            </Popconfirm>\n\n            {/* <Button size=\"small\" key=\"edit\">\n              编辑\n            </Button> */}\n            {record.status === 0 && record.round === 0 && (\n              <Popconfirm\n                title=\"确定要开启吗\"\n                disabled={record.status !== 0}\n                onConfirm={() => handleStart(record.id)}\n              >\n                <Button size=\"small\" key=\"start\" type=\"primary\">\n                  开启游戏\n                </Button>\n              </Popconfirm>\n            )}\n            {record.status === 1 && (\n              <Popconfirm\n                title=\"确定要完成吗\"\n                onConfirm={() => handleFinish(record.id)}\n              >\n                <Button size=\"small\" key=\"finish\">\n                  完成游戏\n                </Button>\n              </Popconfirm>\n            )}\n            <Button\n              size=\"small\"\n              type=\"primary\"\n              key=\"custom\"\n              onClick={() => {\n                setSelectId(record.id);\n                setDetailModalVisible(true);\n              }}\n            >\n              {record.round === -1 ? '初始化' : '查看'}\n            </Button>\n          </Space>\n        );\n      },\n    },\n  ];\n  const [dataSource, setDataSource] = useState<IColumn[]>([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [detailModalVisible, setDetailModalVisible] = useState(false);\n  const [selectId, setSelectId] = useState(0);\n\n  const handleDelete = async (gameId: number) => {\n    const res = await request(`/game/delete/${gameId}`, {\n      method: 'POST',\n    });\n    message.success('删除成功');\n    fetchList();\n  };\n\n  const handleStart = async (gameId: number) => {\n    const res = await request(`/game/start/${gameId}`, {\n      method: 'POST',\n    });\n    message.success('开启成功');\n    await fetchList();\n    await confirm('游戏已开启，是否前往');\n    history.push('/dm');\n  };\n\n  const handleFinish = async (gameId: number) => {\n    const res = await request(`/game/finish/${gameId}`, {\n      method: 'POST',\n    });\n    message.success('完成成功');\n    fetchList();\n  };\n\n  const fetchList = async () => {\n    let res = await request('/game/list', {\n      method: 'GET',\n    });\n    if (res.code === 200) {\n      setDataSource(res.data ?? []);\n    }\n  };\n  useEffect(() => {\n    fetchList();\n  }, []);\n  return (\n    <div style={{ padding: '10px' }}>\n      <div className={style['table-toolbar']}>\n        <div>\n          <Space>\n            <Button\n              icon={<SearchOutlined />}\n              type=\"primary\"\n              onClick={() => {\n                setModalVisible(true);\n              }}\n            >\n              新建剧本\n            </Button>\n          </Space>\n        </div>\n      </div>\n      <Table rowKey=\"id\" columns={columns} dataSource={dataSource} />\n      <GameModal\n        visible={modalVisible}\n        setVisible={setModalVisible}\n        onUpdate={() => {\n          fetchList();\n        }}\n      />\n\n      <DetailModal\n        visible={detailModalVisible}\n        setVisible={setDetailModalVisible}\n        gameId={selectId}\n        onUpdate={() => {\n          fetchList();\n        }}\n      />\n    </div>\n  );\n};\n\nexport default GameTable;\n","export enum GAME_STATUS {}\n\nexport enum WS_MSG_TYPE {\n  SHARE_CLUE = 'share_clue',\n  OPEN_CLUE = 'open_clue',\n  START_VOTE = 'start_vote',\n  SET_NEXT_ROUND = 'set_next_round',\n  VOTE = 'vote',\n}\n\nexport const API_PREFIX =\n  process.env.NODE_ENV === 'development' ? '/api' : '/larp';\n\nexport const WS_URL =\n  process.env.NODE_ENV === 'development'\n    ? 'ws://localhost:8011/larp'\n    : `ws://${window.location.host.replace('http://', '')}/larp`;\n","import React, { FC, useState, useEffect } from 'react';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2733389_fdfq7bijp2r.js',\n});\n\nexport default (props: any) => {\n  return <IconFont {...props} type=\"icon-maoxian\" />;\n};\n","import React, { FC, useState, useEffect } from 'react';\nimport { connect, useDispatch, history } from 'umi';\nimport { Dropdown, Menu, Space } from 'antd';\nimport { MenuInfo } from 'rc-menu/lib/interface';\nimport { IGamerState } from 'umi';\nimport localForage from 'localforage';\nimport { confirm } from '@/utils/common';\nimport Logo from '@/components/Logo';\nimport { request } from '@/utils';\n\ntype TPageHeader = {\n  user: string | null;\n};\nconst connector = ({ gamer }: { gamer: IGamerState }) => {\n  return {\n    user: gamer.user,\n  };\n};\nconst PageHeader: FC<TPageHeader> = ({ user = '' }) => {\n  const onMenuClick = async (event: MenuInfo) => {\n    const { key } = event;\n    if (key === 'logout') {\n      await confirm('确定要退出吗?');\n      await localForage.clear();\n      history.push('/login');\n    }\n  };\n  const UserDropdownMenu = (\n    <Menu onClick={onMenuClick}>\n      <Menu.Item key=\"logout\">退出</Menu.Item>\n    </Menu>\n  );\n  const [adminUser, setadminUser] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const res = await request('/users/getList');\n      const adminUser = res.data.find(\n        ({ role }: { role: number }) => role === 1,\n      );\n      if (adminUser) {\n        setadminUser(adminUser.name);\n      }\n    })();\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        color: '#fff',\n        fontSize: '1.5em',\n      }}\n    >\n      <Logo style={{ fontSize: '30px' }} />\n      <div>本期主持人 : {adminUser}</div>\n      <Space size=\"large\">\n        <Dropdown overlay={UserDropdownMenu}>\n          <div>{user}</div>\n        </Dropdown>\n      </Space>\n    </div>\n  );\n};\n\nexport default connect(connector)(PageHeader);\n","import React, { FC, useState, useEffect, useMemo } from 'react';\nimport { useLocation } from 'umi';\nimport GameControl from '@/pages/DM/components/GameControl';\nimport GamerOperation from '@/pages/Gamer/components/GamerOperation';\ntype TPageFooter = {};\nconst PageFooter: FC<TPageFooter> = (props) => {\n  const location = useLocation();\n  const footer = useMemo(() => {\n    switch (location.pathname) {\n      case '/dm':\n        return <GameControl />;\n      case '/gamer':\n        return <GamerOperation />;\n      default:\n        return null;\n    }\n  }, [location.pathname]);\n  return footer;\n};\n\nexport default PageFooter;\n","import React, { useEffect, useState } from 'react';\nimport { history, Helmet, useLocation } from 'umi';\nimport localForage from 'localforage';\nimport { Layout } from 'antd';\nimport './style.less';\nconst { Header, Footer, Sider, Content } = Layout;\nimport PageHeader from './components/PageHeader';\nimport PageFooter from './components/PageFooter';\nconst CommonLayoyt: React.FC = ({ children }) => {\n  useEffect(() => {\n    (async () => {\n      const user = await localForage.getItem('user');\n      if (!user) {\n        history.push('/login');\n      } else {\n      }\n    })();\n  }, []);\n\n\n\n  return (\n    <>\n      <Helmet>\n        <title>剧本杀</title>\n      </Helmet>\n      <Layout style={{ height: '100%' }}>\n        <Header style={{ height: '50px', lineHeight: '50px' }}>\n          <PageHeader />\n        </Header>\n        <Content\n          style={{\n            padding: '0 8px',\n            height: 'calc(100% - 100px)',\n            overflow: 'hidden',\n          }}\n        >\n          {children}\n        </Content>\n        <Footer style={{ background: 'rgb(0, 21, 41)', padding: '9px' }}>\n          <PageFooter />\n        </Footer>\n      </Layout>\n    </>\n  );\n};\n\nexport default CommonLayoyt;\n","import { Modal } from 'antd';\n\nexport const confirm = (title: string) => {\n  return new Promise((resolve, reject) => {\n    Modal.confirm({\n      title,\n      onOk() {\n        resolve(null);\n      },\n      onCancel() {\n        reject();\n      },\n    });\n  });\n};\n\nconst random = (arr: any[]) => {\n  return Math.floor(Math.random() * arr.length + 1) - 1;\n};\n\nexport const getRandomFromArray = (arr: any[], num: number) => {\n  let newArr = Array.from(arr);\n  let result = [];\n  for (let i = 0; i < num; i++) {\n    if (newArr.length > 0) {\n      let index = random(newArr);\n      result.push(newArr[index]);\n      newArr.splice(index, 1);\n    }\n  }\n  return result;\n};\n","import { TWSData } from '@/types';\n\nexport const formatWSData = (msg: string): TWSData => {\n  let res: TWSData = JSON.parse(msg);\n  return res;\n};\n\nexport const buildWsData = (result: Object): string => {\n  return JSON.stringify(result);\n};\n","import { history } from 'umi';\nimport { extend } from 'umi-request';\nimport { notification } from 'antd';\nimport { API_PREFIX } from '@/constants';\nexport interface ResponseData {\n  code: number;\n  data?: any;\n  msg?: string;\n}\n\nconsole.log(process.env.NODE_ENV);\n\n/**\n * 异常处理程序\n */\nconst errorHandler = (error: {\n  response: Response;\n  message: string;\n  data: any;\n}) => {\n  const { response, message, data } = error;\n  console.log(error);\n\n  if (message === 'CustomError') {\n    const { res } = data;\n    const { msg } = res;\n\n    notification.error({\n      message: `提示`,\n      description: msg,\n    });\n  }\n\n  throw error; // 如果throw. 错误将继续抛出,走catch流程.\n};\n\n/**\n * 配置request请求时的默认参数\n */\nconst request = extend({\n  errorHandler, // 默认错误处理\n  prefix: API_PREFIX,\n});\n\nrequest.use(async (ctx, next) => {\n  await next();\n\n  // 请求后\n  const { res }: { res: ResponseData } = ctx;\n  const { code, msg } = res;\n\n  if (code !== 200) {\n    return Promise.reject({\n      data: ctx,\n      message: 'CustomError',\n    });\n  }\n});\n\nexport default request;\n"],"sourceRoot":""}